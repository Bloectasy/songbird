var searchIndex = JSON.parse('{\
"songbird":{"doc":"project logo","t":[0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,3,12,12,12,4,13,13,13,4,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,0,4,13,13,13,13,13,13,6,4,13,13,13,13,13,13,13,13,13,13,13,13,6,4,13,13,13,6,0,4,13,13,13,12,12,13,12,12,12,12,13,12,12,12,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,3,3,4,13,13,13,13,4,13,13,8,10,4,13,13,13,13,13,0,3,12,3,12,3,12,0,0,3,12,12,12,3,4,13,13,5,3,12,12,12,12,12,5,5,5,0,3,12,12,4,13,13,13,4,13,13,13,11,0,4,13,13,13,12,12,13,13,13,13,13,13,13,13,4,13,13,13,13,13,6,0,4,13,13,13,13,13,13,13,13,11,8,10,10,0,3,11,11,11,11,8,10,10,0,5,5,5,5,5,3,4,13,13,12,3,12,12,5,5,5,3,12,12,12,12,12,12,12,12,12,5,5,3,12,12,12,12,12,11,11,11,11,11,11,11,0,3,5,5,5,8,10,10,0,4,13,13,11,3,4,13,13,11,3,0,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,6,3,4,13,13,4,13,13,13,13,3,3,3,12,12,12,12,12,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,4,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,12,12,13,12,12,12,12,13,12,12,12,13,13,13,13,13,13,13,4,13,13,13,13,5,5,3,3,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["constants","VOICE_GATEWAY_VERSION","SAMPLE_RATE","SAMPLE_RATE_RAW","AUDIO_FRAME_RATE","TIMESTEP_LENGTH","DEFAULT_BITRATE","MONO_FRAME_SIZE","STEREO_FRAME_SIZE","MONO_FRAME_BYTE_SIZE","STEREO_FRAME_BYTE_SIZE","FRAME_LEN_MS","CHILD_BUFFER_LEN","VOICE_PACKET_MAX","UDP_KEEPALIVE_GAP_MS","UDP_KEEPALIVE_GAP","SILENT_FRAME","RTP_VERSION","RTP_PROFILE_TYPE","driver","Config","crypto_mode","decode_mode","preallocated_tracks","CryptoMode","Normal","Suffix","Lite","DecodeMode","Pass","Decrypt","Decode","Driver","new","connect","leave","mute","is_mute","play_source","play_only_source","play","play_only","set_bitrate","stop","set_config","add_global_event","remove_all_global_events","queue","enqueue_source","enqueue","Connect","error","JoinError","Dropped","NoSender","NoCall","Driver","Serenity","Twilight","JoinResult","ConnectionError","AttemptDiscarded","Crypto","CryptoModeInvalid","CryptoModeUnavailable","EndpointUrl","ExpectedHandshake","IllegalDiscoveryResponse","IllegalIp","Io","Json","InterconnectFailure","Ws","ConnectionResult","TrackError","Finished","InvalidTrackEvent","SeekUnsupported","TrackResult","events","EventContext","Track","SpeakingStateUpdate","SpeakingUpdate","ssrc","speaking","VoicePacket","audio","packet","payload_offset","payload_end_pad","RtcpPacket","packet","payload_offset","payload_end_pad","ClientConnect","ClientDisconnect","DriverConnect","DriverReconnect","DriverConnectFailed","DriverReconnectFailed","SsrcKnown","CoreEvent","SpeakingStateUpdate","SpeakingUpdate","VoicePacket","RtcpPacket","ClientConnect","ClientDisconnect","DriverConnect","DriverReconnect","DriverConnectFailed","DriverReconnectFailed","SsrcKnown","EventData","EventStore","TrackEvent","Play","Pause","End","Loop","UntimedEvent","Track","Core","EventHandler","act","Event","Periodic","Delayed","Track","Core","Cancel","id","ChannelId","0","GuildId","0","UserId","0","input","cached","Compressed","raw","metadata","stereo","OpusCompressor","LengthHint","Bytes","Time","apply_length_hint","Memory","raw","metadata","kind","stereo","container","compressed_cost_per_sec","raw_cost_per_sec","default_config","codec","OpusDecoderState","decoder","allow_passthrough","Codec","Opus","Pcm","FloatPcm","CodecType","Opus","Pcm","FloatPcm","sample_len","error","Error","Dca","Io","Json","error","parsed_text","Opus","Metadata","Stdout","Streams","Streamcatcher","YouTubeDLProcessing","YouTubeDLRun","YouTubeDLUrl","DcaError","IoError","InvalidHeader","InvalidMetadata","InvalidSize","Opus","Result","reader","Reader","Pipe","Memory","Compressed","Restartable","File","Vec","Extension","ExtensionSeek","is_seekable","ReadSeek","read","seek","restartable","Restartable","new","ffmpeg","ytdl","ytdl_search","Restart","call_restart","lazy_init","utils","timestamp_to_sample_count","sample_count_to_timestamp","timestamp_to_byte_count","byte_count_to_timestamp","decoder","ChildContainer","Container","Raw","Dca","first_frame","Frame","header_len","frame_len","dca","ffmpeg","ffmpeg_optioned","Metadata","title","artist","date","channels","start_time","duration","sample_rate","source_url","thumbnail","ytdl","ytdl_search","Input","metadata","stereo","reader","kind","container","float_pcm","new","is_seekable","is_stereo","get_type","mix","seek_time","serenity","SongbirdKey","register","register_with","get","SerenityInit","register_songbird","register_songbird_with","shards","Sharder","Serenity","Twilight","get_shard","SerenitySharder","Shard","Serenity","Twilight","send","SerenityShardHandle","tracks","TrackCommand","Play","Pause","Stop","Volume","Seek","AddEvent","Do","Request","Loop","MakePlayable","TrackError","Finished","InvalidTrackEvent","SeekUnsupported","TrackResult","TrackHandle","LoopState","Infinite","Finite","PlayMode","Play","Pause","Stop","End","TrackQueue","Queued","TrackState","playing","volume","position","play_time","loops","Track","events","handle","loops","new_raw","play","pause","stop","playing","set_volume","volume","position","play_time","set_loops","make_playable","state","seek_time","uuid","create_player","create_player_with_uuid","Bitrate","BitsPerSecond","Max","Auto","CoreEvent","SpeakingStateUpdate","SpeakingUpdate","VoicePacket","RtcpPacket","ClientConnect","ClientDisconnect","DriverConnect","DriverReconnect","DriverConnectFailed","DriverReconnectFailed","SsrcKnown","EventContext","Track","SpeakingStateUpdate","SpeakingUpdate","ssrc","speaking","VoicePacket","audio","packet","payload_offset","payload_end_pad","RtcpPacket","packet","payload_offset","payload_end_pad","ClientConnect","ClientDisconnect","DriverConnect","DriverReconnect","DriverConnectFailed","DriverReconnectFailed","SsrcKnown","TrackEvent","Play","Pause","End","Loop","ffmpeg","ytdl","Call","Songbird","ConnectionInfo","endpoint","guild_id","session_id","token","user_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_future","try_poll","vzip","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","skip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","read","seek","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","skip","read","seek","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","skip","read","seek","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","skip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","clone","try_from","fmt","hash","eq","ne","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","cmp","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","partial_cmp","deref","deref","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","hash","try_from","try_from","read","read","read","read","read","seek","seek","seek","seek","poll","initialise","register_shard","deregister_shard","server_update","state_update","transform_read","min_bytes_required","state","crypto_mode","decode_mode","preallocated_tracks","to_request_str","nonce_size","payload_prefix_len","payload_suffix_len","payload_overhead","encrypt_in_place","should_decrypt","to_core_event","new","compute_activation","new","new_local","add_event","new","from_driver_config","standalone","standalone_from_driver_config","deafen","is_deaf","join","join_gateway","current_connection","leave","mute","is_mute","update_server","update_state","new","with_config","with_encoder","new_handle","new","with_config","new_handle","new","from_decoder","next_frame_length","try_seek_trivial","input_start","from_ffprobe_json","from_ytdl_output","take","serenity","twilight","initialise_client_data","get","get_or_insert","join","join_gateway","leave","remove","process","set_config","new","play","pause","stop","set_volume","make_playable","is_seekable","seek_time","add_event","action","get_info","enable_loop","disable_loop","loop_for","uuid","metadata","typemap","send","is_done","handle","new","add_source","add","current","dequeue","len","is_empty","modify_queue","pause","resume","stop","skip","current_queue"],"q":["songbird","songbird::constants","","","","","","","","","","","","","","","","","","songbird","songbird::driver","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird","songbird::error","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird","songbird::events","","","","songbird::events::EventContext","","songbird::events","songbird::events::EventContext","","","","songbird::events","songbird::events::EventContext","","","songbird::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird","songbird::id","","","","","","songbird","songbird::input","songbird::input::cached","","","","","","","","","","","","","","","","","","songbird::input","songbird::input::codec","","","","","","","","","","","","songbird::input","songbird::input::error","","","","songbird::input::error::Error","","songbird::input::error","","","","","","","","","","","","","","","songbird::input","songbird::input::reader","","","","","","","","","","","","","songbird::input","songbird::input::restartable","","","","","","","","songbird::input","songbird::input::utils","","","","","songbird::input","","","","songbird::input::Container","songbird::input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird","songbird::serenity","","","","","","","songbird","songbird::shards","","","","","","","","","","songbird","songbird::tracks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird","","","","","","","","","","","","","","","","","","","","songbird::EventContext","","songbird","songbird::EventContext","","","","songbird","songbird::EventContext","","","songbird","","","","","","","","","","","","","","","","","","","","","","songbird::driver","","","","","","","","","","songbird::error","","","","","","","","","songbird::driver","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::error","","","","","","","","","","","","","","","","","","","","","songbird::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird","","","","","","","","","","songbird::id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird","","","","","","","","","","songbird::input::cached","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::input","","","","","","","","","songbird::input::codec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::input","","","","","","","","","","","","","","","","","","","","songbird::input::error","","","","","","","","","","","","","","","","songbird::input","","","","","","","","","","","songbird::input::reader","","","","","","","","","","","songbird::input::restartable","","","","","","","","","","","songbird::input","","","","","","","","","","","songbird","","","","","","","","songbird::serenity","","","","","","","","songbird::shards","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::tracks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird","","","","","","","","","","","","","","","","","songbird::driver","songbird::input","songbird::error","","","","","","","","","songbird::events","","","","songbird::id","","","","","","","","","songbird::input","songbird::input::cached","","songbird::input::reader","","songbird::input::codec","songbird::input::error","","","","songbird::input::reader","songbird::input","songbird::driver","","","","songbird::events","","","","","songbird","songbird::id","","","songbird","songbird::input::cached","","","songbird::input::codec","","","songbird::input","","","songbird::shards","songbird::error","songbird::tracks","","","","","songbird::driver","","songbird::events","songbird::id","","","songbird::input","songbird::shards","","songbird::tracks","","","","songbird::events","songbird::driver","","songbird::events","","","","","","","songbird::id","","","","","","songbird::input","","songbird::error","songbird::tracks","","","","","songbird::events","songbird","songbird::tracks","songbird","songbird::driver","songbird::error","songbird::driver","","","songbird::error","songbird::events","","","","","","","songbird","songbird::id","","","songbird","songbird::input::cached","","","","songbird::input","songbird::input::codec","","","songbird::input","","songbird::input::error","","songbird::input","songbird::input::reader","songbird::input::restartable","songbird::input","songbird","songbird::shards","","","","songbird::tracks","songbird::error","songbird::tracks","","","","","","","songbird::error","","songbird::id","","","songbird::error","songbird::events","","","","songbird::id","","","songbird::input","songbird::input::codec","songbird::input","songbird::input::reader","","songbird::input::restartable","songbird::input","songbird::input::reader","","songbird::input::restartable","songbird::input","songbird::driver","songbird","","","","","songbird::input::cached","","","songbird::driver","","","","","","","","","","songbird::events","","","","","","songbird","","","","","","","","","","","","","","songbird::input::cached","","","","","","","songbird::input::codec","","songbird::input","","","","","","songbird","","","","","","","","","","","songbird::tracks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Constants affecting driver function and API handling.","The voice gateway version used by the library.","Sample rate of audio to be sent to Discord.","Sample rate of audio to be sent to Discord.","Number of audio frames/packets to be sent per second.","Length of time between any two audio frames.","Default bitrate for audio.","Number of samples in one complete frame of audio per …","Number of individual samples in one complete frame of …","Number of bytes in one complete frame of raw <code>f32</code>-encoded …","Number of bytes in one complete frame of raw <code>f32</code>-encoded …","Length (in milliseconds) of any audio frame.","Maximum number of audio frames/packets to be sent per …","Maximum packet size for a voice packet.","Delay between sends of UDP keepalive frames.","Type-converted delay between sends of UDP keepalive …","Opus silent frame, used to signal speech start and end …","The one (and only) RTP version.","Profile type used by Discord’s Opus audio traffic.","Runner for a voice connection.","Configuration for the inner Driver.","Selected tagging mode for voice packet encryption.","Configures whether decoding and decryption occur for all …","Number of concurrently active tracks to allocate memory …","Variants of the XSalsa20Poly1305 encryption scheme.","The RTP header is used as the source of nonce bytes for …","An additional random 24B suffix is used as the source of …","An additional random 4B suffix is used as the source of …","Decode behaviour for received RTP packets within the …","Packets received from Discord are handed over to events …","Decrypts the body of each received packet.","Decrypts and decodes each received packet, correctly …","The control object for a Discord voice connection, …","Creates a new voice driver.","Connects to a voice channel using the specified server.","Leaves the current voice channel, disconnecting from it.","Sets whether the current connection is to be muted.","Returns whether the driver is muted (i.e., processes …","Plays audio from a source, returning a handle for further …","Plays audio from a source, returning a handle for further …","Plays audio from a [<code>Track</code>] object.","Exclusively plays audio from a <code>Track</code> object.","Sets the bitrate for encoding Opus packets sent along the …","Stops playing audio from all sources, if any are set.","Sets the configuration for this driver.","Attach a global event handler to an audio context. Global …","Removes all global event handlers from an audio context.","Returns a reference to this driver’s built-in queue.","Adds an audio <code>Input</code> to this driver’s built-in queue.","Adds an existing <code>Track</code> to this driver’s built-in queue.","Future for a call to <code>Driver::connect</code>.","Driver and gateway error handling.","Error returned when a manager or call handler is unable …","Request to join was dropped, cancelled, or replaced.","No available gateway connection was provided to send …","Tried to leave a <code>Call</code> which was not found.","The driver failed to establish a voice connection.","Serenity-specific WebSocket send error.","Twilight-specific WebSocket send error.","Convenience type for Discord gateway error handling.","Errors encountered while connecting to a Discord voice …","The driver hung up an internal signaller, either due to …","An error occurred during [en/de]cryption of voice packets …","Server did not return the expected crypto mode during …","Selected crypto mode was not offered by server.","An indicator that an endpoint URL was invalid.","Discord hello/ready handshake was violated.","Discord failed to correctly respond to IP discovery.","Could not parse Discord’s view of our IP.","Miscellaneous I/O error.","JSON (de)serialization error.","Failed to message other background tasks after connection …","Error communicating with gateway server over WebSocket.","Convenience type for Discord voice/driver connection …","Errors associated with control and manipulation of tracks.","The operation failed because the track has ended, has …","The supplied event listener can never be fired by a …","The track’s underlying <code>Input</code> doesn’t support seeking …","Alias for most calls to a <code>TrackHandle</code>.","Events relating to tracks, timing, and other callers.","Information about which tracks or data fired an event.","Track event context, passed to events created via …","Speaking state update, typically describing how another …","Speaking state transition, describing whether a given …","Synchronisation Source of the user who has begun speaking.","Whether this user is currently speaking.","Opus audio packet, received from another stream (detailed …","Decoded audio from this packet.","Raw RTP packet data.","Byte index into the packet body (after headers) for where …","Number of bytes at the end of the packet to discard.","Telemetry/statistics packet, received from another stream …","Raw RTCP packet data.","Byte index into the packet body (after headers) for where …","Number of bytes at the end of the packet to discard.","Fired whenever a client connects to a call for the first …","Fired whenever a client disconnects.","Fires when this driver successfully connects to a voice …","Fires when this driver successfully reconnects after a …","Fires when this driver fails to connect to a voice …","Fires when this driver fails to reconnect to a voice …","Fires whenever the driver is assigned a new RTP SSRC by …","Voice core events occur on receipt of voice packets and …","Fired on receipt of a speaking state update from another …","Fires when a source starts speaking, or stops speaking (<em>…","Fires on receipt of a voice packet from another stream in …","Fires on receipt of an RTCP packet, containing various …","Fires whenever a user connects to the same stream as the …","Fires whenever a user disconnects from the same stream as …","Fires when this driver successfully connects to a voice …","Fires when this driver successfully reconnects after a …","Fires when this driver fails to connect to a voice …","Fires when this driver fails to reconnect to a voice …","Fires whenever the driver is assigned a new RTP SSRC by …","Internal representation of an event, as handled by the …","Storage for <code>EventData</code>, designed to be used for both local …","Track events correspond to certain actions or changes of …","The attached track has resumed playing.","The attached track has been paused.","The attached track has ended.","The attached track has looped.","Track and voice core events.","Untimed events belonging to a track, such as state …","Untimed events belonging to the global context, such as …","Trait to handle an event which can be fired per-track, or …","Respond to one received event.","Classes of event which may occur, triggering a handler at …","Periodic events rely upon two parameters: a <em>period</em> and an …","Delayed events rely upon a <em>delay</em> parameter, and fire one <em>…","Track events correspond to certain actions or changes of …","Core events","Cancels the event, if it was intended to persist.","Newtypes around Discord IDs for library …","ID of a Discord voice/text channel.","","ID of a Discord guild (colloquially, “server”).","","ID of a Discord user.","","Raw audio input data streams and sources.","In-memory, shared input sources for reuse between calls, …","A wrapper around an existing <code>Input</code> which compresses the …","Inner shared bytestore.","Metadata moved out of the captured source.","Stereo-ness of the captured source.","Transform applied inside <code>Compressed</code>, converting a …","Expected amount of time that an input should last.","Estimate of a source’s length in bytes.","Estimate of a source’s length in time.","Modify the given cache configuration to initially allocate…","A wrapper around an existing <code>Input</code> which caches the …","Inner shared bytestore.","Metadata moved out of the captured source.","Codec used to read the inner bytestore.","Stereo-ness of the captured source.","Framing mechanism for the inner bytestore.","Estimates the cost, in B/s, of audio data compressed at …","Calculates the cost, in B/s, of raw floating-point audio …","Provides the default config used by a cached source.","Decoding schemes for input audio bytestreams.","Inner state used to decode Opus input sources.","Inner decoder used to convert opus frames into a stream …","Controls whether this source allows direct Opus frame …","State used to decode input bytes of an <code>Input</code>.","The inner bytestream is encoded using the Opus codec, to …","The inner bytestream is encoded using raw <code>i16</code> samples.","The inner bytestream is encoded using raw <code>f32</code> samples.","Type of data being passed into an <code>Input</code>.","The inner bytestream is encoded using the Opus codec.","The inner bytestream is encoded using raw <code>i16</code> samples.","The inner bytestream is encoded using raw <code>f32</code> samples.","Returns the length of a single output sample, in bytes.","Errors caused by input creation.","An error returned when creating a new <code>Input</code>.","An error occurred while opening a new DCA source.","An error occurred while reading, or opening a file.","An error occurred while parsing JSON (i.e., during …","Json error","Text that failed to be parsed","An error occurred within the Opus codec.","Failed to extract metadata from alternate pipe.","Apparently failed to create stdout.","An error occurred while checking if a path is stereo.","Configuration error for a cached Input.","An error occurred while processing the JSON output from …","An error occurred while running <code>youtube-dl</code>.","The <code>url</code> field of the <code>youtube-dl</code> JSON output was not …","An error returned from the <code>dca</code> method.","An error occurred while reading, or opening a file.","The file opened did not have a valid DCA JSON header.","The file’s metadata block was invalid, or could not be …","The file’s header reported an invalid metadata block …","An error was encountered while creating a new Opus …","Convenience type for fallible return of <code>Input</code>s.","Raw handlers for input bytestreams.","Usable data/byte sources for an audio stream.","Piped output of another program (i.e., <code>ffmpeg</code>).","A cached, raw in-memory store, provided by Songbird.","A cached, Opus-compressed in-memory store, provided by …","A source which supports seeking by recreating its inout …","A source contained in a local file.","A source contained as an array in memory.","A basic user-provided source.","A user-provided source which also implements <code>Seek</code>.","Returns whether the given source implements <code>Seek</code>.","Fusion trait for custom input sources which allow seeking.","See <code>Read::read</code>.","See <code>Seek::seek</code>.","A source which supports seeking by recreating its input …","A wrapper around a method to create a new <code>Input</code> which …","Create a new source, which can be restarted using a …","Create a new restartable ffmpeg source for a local file.","Create a new restartable ytdl source.","Create a new restartable ytdl source, using the first …","Trait used to create an instance of a <code>Reader</code> at …","Tries to create a replacement source.","Optionally retrieve metadata for a source which has been …","Utility methods for seeking or decoding.","Calculates the sample position in a FloatPCM stream from …","Calculates the time position in a FloatPCM stream from a …","Calculates the byte position in a FloatPCM stream from a …","Calculates the time position in a FloatPCM stream from a …","Create an Opus decoder outputting at a sample rate of …","Handle for a child process which ensures that any …","Marker and state for decoding framed input files.","Raw, unframed input.","Framed input, beginning with a JSON header.","Byte index of the first frame after the JSON header.","Information used in audio frame detection.","Length of this frame’s header, in bytes.","Payload length, in bytes.","Creates a streamed audio source from a DCA file. …","Opens an audio file through <code>ffmpeg</code> and creates an audio …","Opens an audio file through <code>ffmpeg</code> and creates an audio …","Information about an <code>Input</code> source.","The title of this stream.","The main artist of this stream.","The date of creation of this stream.","The number of audio channels in this stream.","The time at which the first true sample is played back.","The reported duration of this stream.","The sample rate of this stream.","The source url of this stream.","The thumbnail url of this stream.","Creates a streamed audio source with <code>youtube-dl</code> and <code>ffmpeg</code>…","Creates a streamed audio source from YouTube search …","Data and metadata needed to correctly parse a <code>Reader</code>’s …","Information about the played source.","Indicates whether <code>source</code> is stereo or mono.","Underlying audio data bytestream.","Decoder used to parse the output of <code>reader</code>.","Framing strategy needed to identify frames of compressed …","Creates a floating-point PCM Input from a given reader.","Creates a new Input using (at least) the given reader, …","Returns whether the inner <code>Reader</code> implements <code>Seek</code>.","Returns whether the read audio signal is stereo (or mono).","Returns the type of the inner <code>Codec</code>.","Mixes the output of this stream into a 20ms stereo audio …","Seeks the stream to the given time, if possible.","Compatability and convenience methods for working with …","Zero-size type used to retrieve the registered <code>Songbird</code> …","Installs a new songbird instance into the serenity client.","Installs a given songbird instance into the serenity …","Retrieve the Songbird voice client from a serenity context…","Helper trait to add installation/creation methods to …","Registers a new Songbird voice system with serenity, …","Registers a given Songbird voice system with serenity, as …","Handlers for sending packets over sharded connections.","Source of individual shard connection handles.","Serenity-specific wrapper for sharder state initialised …","Twilight-specific wrapper for sharder state initialised …","Returns a new handle to the required inner shard.","Serenity-specific wrapper for sharder state initialised …","A reference to an individual websocket connection.","Handle to one of serenity’s shard runners.","Handle to a twilight shard spawned from a cluster.","Send a JSON message to the inner shard handle.","Handle to an individual shard designed to buffer unsent …","Live, controllable audio instances.","A request from external code using a <code>TrackHandle</code> to modify…","Set the track’s play_mode to play/resume.","Set the track’s play_mode to pause.","Stop the target track. This cannot be undone.","Set the track’s volume.","Seek to the given duration.","Register an event on this track.","Run some closure on this track, with direct access to the …","Request a read-only view of this track’s state.","Change the loop count/strategy of this track.","Prompts a track’s input to become live and usable, if …","Errors associated with control and manipulation of tracks.","The operation failed because the track has ended, has …","The supplied event listener can never be fired by a …","The track’s underlying <code>Input</code> doesn’t support seeking …","Alias for most calls to a <code>TrackHandle</code>.","Handle for safe control of a <code>Track</code> from other threads, …","Looping behaviour for a <code>Track</code>.","Track will loop endlessly until loop state is changed or …","Track will loop <code>n</code> more times.","Playback status of a track.","The track is currently playing.","The track is currently paused, and may be resumed.","The track has been manually stopped, and cannot be …","The track has naturally ended, and cannot be restarted.","A simple queue for several audio sources, designed to …","Reference to a track which is known to be part of a queue.","State of an <code>Track</code> object, designed to be passed to event …","Play status (e.g., active, paused, stopped) of this track.","Current volume of this track.","Current playback position in the source.","Total playback time, increasing monotonically.","Remaining loops on this track.","Control object for audio playback.","List of events attached to this audio track.","Handle for safe control of this audio track from other …","Count of remaining loops.","Create a new track directly from an input, command source,…","Sets a track to playing if it is paused.","Pauses a track if it is playing.","Manually stops a track.","Returns the current play status of this track.","Sets <code>volume</code> in a manner that allows method chaining.","Returns the current playback position.","Returns the current playback position.","Returns the total length of time this track has been …","Set an audio track to loop a set number of times.","Ready a track for playing if it is lazily initialised.","Creates a read-only copy of the audio track’s state.","Seek to a specific point in the track.","Returns this track’s unique identifier.","Creates a <code>Track</code> object to pass into the audio context, …","Creates a <code>Track</code> and <code>TrackHandle</code> as in <code>create_player</code>, …","","Explicit bitrate choice (in bits/second).","Maximum bitrate allowed (up to maximum number of bytes …","Default bitrate decided by the encoder (not recommended).","Voice core events occur on receipt of voice packets and …","Fired on receipt of a speaking state update from another …","Fires when a source starts speaking, or stops speaking (<em>…","Fires on receipt of a voice packet from another stream in …","Fires on receipt of an RTCP packet, containing various …","Fires whenever a user connects to the same stream as the …","Fires whenever a user disconnects from the same stream as …","Fires when this driver successfully connects to a voice …","Fires when this driver successfully reconnects after a …","Fires when this driver fails to connect to a voice …","Fires when this driver fails to reconnect to a voice …","Fires whenever the driver is assigned a new RTP SSRC by …","Information about which tracks or data fired an event.","Track event context, passed to events created via …","Speaking state update, typically describing how another …","Speaking state transition, describing whether a given …","Synchronisation Source of the user who has begun speaking.","Whether this user is currently speaking.","Opus audio packet, received from another stream (detailed …","Decoded audio from this packet.","Raw RTP packet data.","Byte index into the packet body (after headers) for where …","Number of bytes at the end of the packet to discard.","Telemetry/statistics packet, received from another stream …","Raw RTCP packet data.","Byte index into the packet body (after headers) for where …","Number of bytes at the end of the packet to discard.","Fired whenever a client connects to a call for the first …","Fired whenever a client disconnects.","Fires when this driver successfully connects to a voice …","Fires when this driver successfully reconnects after a …","Fires when this driver fails to connect to a voice …","Fires when this driver fails to reconnect to a voice …","Fires whenever the driver is assigned a new RTP SSRC by …","Track events correspond to certain actions or changes of …","The attached track has resumed playing.","The attached track has been paused.","The attached track has ended.","The attached track has looped.","Opens an audio file through <code>ffmpeg</code> and creates an audio …","Creates a streamed audio source with <code>youtube-dl</code> and <code>ffmpeg</code>…","The Call handler is responsible for a single voice …","A shard-aware struct responsible for managing <code>Call</code>s.","Parameters and information needed to start communicating …","URL of the voice websocket gateway server assigned to …","ID of the target voice channel’s parent guild.","Unique string describing this session for …","Ephemeral secret used to validate the above session.","UserID of this boteaves the current connected voice channel, if connected …ets this <code>Config</code>’s chosen cryptographic tagging scheme.","Sets this <code>Config</code>’s received packet decryption/decoding …","Sets this <code>Config</code>’s number of tracks to preallocate.","Returns the name of a mode as it will appear during …","Returns the number of bytes each nonce is stored as within…","Returns the number of bytes occupied by the encryption …","Returns the number of bytes occupied by the encryption …","Calculates the number of additional bytes required …","Encrypts a Discord RT(C)P packet using the given key.","Returns whether this mode will decrypt received packets.","Retreive the event class for an event (i.e., when …","Create a representation of an event and its associated …","Computes the next firing time for a timer event.","Creates a new event store to be used globally.","Creates a new event store to be used within a <code>Track</code>.","Add an event to this store.","Creates a new Call, which will send out WebSocket …","Creates a new Call, configuring the driver as specified.","Creates a new, standalone Call which is not connected via …","Creates a new standalone Call, configuring the driver as …","Sets whether the current connection is to be deafened.","Returns whether the current connection is self-deafened …","Connect or switch to the given voice channel by its Id.","Join the selected voice channel, <em>without</em> running/starting …","Returns the current voice connection details for this …","Leaves the current voice channel, disconnecting from it.","Sets whether the current connection is to be muted.","Returns whether the current connection is self-muted in …","Updates the voice server data.","Updates the internal voice state of the current user.","Wrap an existing <code>Input</code> with an in-memory store, …","Wrap an existing <code>Input</code> with an in-memory store, …","Wrap an existing <code>Input</code> with an in-memory store, …","Acquire a new handle to this object, creating a new view …","Wrap an existing <code>Input</code> with an in-memory store with the …","Wrap an existing <code>Input</code> with an in-memory store with the …","Acquire a new handle to this object, creating a new view …","Creates a new decoder, having stereo output at 48kHz.","Creates a new decoder pre-configured by the user.","Tries to read the header of the next frame from an input …","Tries to seek on an input directly using sample length, …","Returns the byte index of the first frame containing …","Extract metadata and details from the output of <code>ffprobe</code>.","Use <code>youtube-dl</code>’s JSON output for metadata for an online …","Move all fields from a <code>Metadata</code> object into a new one.","Create a new Songbird instance for serenity.","Create a new Songbird instance for twilight.","Set the bot’s user, and the number of shards in use.","Retrieves a <code>Call</code> for the given guild, if one already …","Retrieves a <code>Call</code> for the given guild, creating a new one …","Connects to a target by retrieving its relevant <code>Call</code> and …","Partially connects to a target by retrieving its relevant …","Retrieves the handler for the given target and leaves the …","Retrieves the <code>Call</code> for the given target and leaves the …","Handle events received on the cluster.","Sets a shared configuration for all drivers created from …","Creates a new handle, using the given command sink and …","Unpauses an audio track.","Pauses an audio track.","Stops an audio track.","Sets the volume of an audio track.","Ready a track for playing if it is lazily initialised.","Denotes whether the underlying <code>Input</code> stream is compatible …","Seeks along the track to the specified position.","Attach an event handler to an audio track. These will …","Perform an arbitrary synchronous action on a raw <code>Track</code> …","Request playback information and state from the audio …","Set an audio track to loop indefinitely.","Set an audio track to no longer loop.","Set an audio track to loop a set number of times.","Returns this handle’s (and track’s) unique identifier.","Returns the metadata stored in the handle.","Allows access to this track’s attached TypeMap.","Send a raw command to the <code>Track</code> object.","Returns whether the track has irreversibly stopped.","Clones the inner handle","Create a new, empty, track queue.","Adds an audio source to the queue, to be played in the …","Adds a <code>Track</code> object to the queue, to be played in the …","Returns a handle to the currently playing track.","Attempts to remove a track from the specified index.","Returns the number of tracks currently in the queue.","Returns whether there are no tracks currently in the …","Allows modification of the inner queue (i.e., deletion, …","Pause the track at the head of the queue.","Resume the track at the head of the queue.","Stop the currently playing track, and clears the queue.","Skip to the next track in the queue, if it exists.","Returns a list of currently queued tracks."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,2,2,2,0,3,3,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,5,5,5,5,5,5,0,0,6,6,6,6,6,6,6,6,6,6,6,6,0,0,7,7,7,0,0,0,8,8,8,9,9,8,10,10,10,10,8,11,11,11,8,8,8,8,8,8,8,0,12,12,12,12,12,12,12,12,12,12,12,0,0,0,13,13,13,13,0,14,14,0,15,0,16,16,16,16,16,0,0,17,0,18,0,19,0,0,0,20,20,20,0,0,21,21,0,0,22,22,22,22,22,0,0,0,0,0,23,23,0,24,24,24,0,25,25,25,25,0,0,26,26,26,27,27,26,26,26,26,26,26,26,26,0,28,28,28,28,28,0,0,0,29,29,29,29,29,29,29,29,29,0,30,30,0,0,31,31,31,31,0,32,32,0,0,0,0,0,0,0,0,33,33,34,0,35,35,0,0,0,0,36,36,36,36,36,36,36,36,36,0,0,0,37,37,37,37,37,37,37,37,37,37,37,37,0,0,0,0,0,0,38,38,0,0,39,39,39,0,0,40,40,40,0,0,0,41,41,41,41,41,41,41,41,41,41,0,7,7,7,0,0,0,42,42,0,43,43,43,43,0,0,0,44,44,44,44,44,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,0,0,46,46,46,0,12,12,12,12,12,12,12,12,12,12,12,0,8,8,8,9,9,8,10,10,10,10,8,11,11,11,8,8,8,8,8,8,8,0,13,13,13,13,0,0,0,0,0,47,47,47,47,47,1,1,1,1,1,1,1,1,1,1,6,6,6,6,6,6,6,6,6,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,48,48,48,48,48,48,48,48,48,48,5,5,5,5,5,5,5,5,5,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,12,12,12,12,12,12,12,12,12,12,12,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,16,16,16,16,16,16,16,16,16,16,16,51,51,51,51,51,51,51,51,51,51,17,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,47,47,47,47,47,47,47,47,47,47,20,20,20,20,20,20,20,20,20,20,52,52,52,52,52,52,52,52,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,53,53,53,53,53,53,53,53,53,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,35,35,35,35,35,35,35,35,35,35,33,33,33,33,33,33,33,33,33,33,26,26,26,26,26,26,26,26,28,28,28,28,28,28,28,28,36,36,36,36,36,36,36,36,36,36,36,29,29,29,29,29,29,29,29,29,29,29,31,31,31,31,31,31,31,31,31,31,31,37,37,37,37,37,37,37,37,37,37,37,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,39,39,39,39,39,39,39,39,56,56,56,56,56,56,56,56,40,40,40,40,40,40,40,40,40,40,57,57,57,57,57,57,57,57,41,41,41,41,41,41,41,41,58,58,58,58,58,58,58,58,58,58,42,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,43,59,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,4,53,6,6,6,6,6,6,5,5,5,14,14,16,16,17,17,17,18,18,18,19,19,19,37,21,21,29,29,25,26,26,26,26,29,37,1,2,3,4,8,12,13,14,16,51,17,18,19,47,20,21,22,23,24,25,35,33,36,40,7,58,42,43,59,44,1,4,50,17,18,19,36,56,57,42,43,59,44,49,2,3,12,49,13,14,14,16,16,17,17,18,18,19,19,36,36,7,42,42,43,44,44,49,51,60,51,1,6,2,3,4,5,8,12,49,50,13,14,16,51,17,18,19,47,20,52,21,22,53,23,24,25,35,33,26,28,36,29,31,37,54,39,56,40,57,41,7,58,42,43,59,60,44,45,6,5,17,18,19,7,12,13,14,16,17,18,19,37,24,53,29,30,31,37,29,30,31,37,48,54,54,54,54,54,52,52,52,1,1,1,2,2,2,2,2,2,3,8,49,49,50,50,50,51,51,51,51,51,51,51,51,51,51,51,51,51,51,20,20,20,20,22,22,22,23,23,33,33,33,36,36,36,54,54,54,54,54,54,54,54,54,54,54,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,43,60,59,59,59,59,59,59,59,59,59,59,59,59,59],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["config",3]]],[[["connectioninfo",3]],["connect",3]],[[]],[[["bool",15]]],[[],["bool",15]],[[["input",3]],["trackhandle",3]],[[["input",3]],["trackhandle",3]],[[["track",3]]],[[["track",3]]],[[["bitrate",4]]],[[]],[[["config",3]]],[[["eventhandler",8],["event",4]]],[[]],[[],["trackqueue",3]],[[["input",3]]],[[["track",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventcontext",4]],[["box",3],["pin",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["config",3],["usize",15]]],null,null,null,null,null,null,[[["bitrate",4]],["usize",15]],[[["bool",15]],["usize",15]],[[["usize",15]],["config",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["usize",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],null,[[],[["usize",15],["ioresult",6]]],[[["seekfrom",4]],[["ioresult",6],["u64",15]]],null,null,[[["bool",15]]],[[["clone",8],["sync",8],["send",8],["bool",15],["asref",8],["osstr",3]]],[[["clone",8],["asref",8],["send",8],["sync",8],["str",15],["bool",15]]],[[["bool",15],["str",15]]],null,[[["option",4],["duration",3]],[["pin",3],["box",3]]],[[],[["pin",3],["box",3]]],null,[[["bool",15],["duration",3]],["usize",15]],[[["usize",15],["bool",15]],["duration",3]],[[["bool",15],["duration",3]],["usize",15]],[[["usize",15],["bool",15]],["duration",3]],[[["bool",15]],[["decoder",3],["opusresult",6]]],null,null,null,null,null,null,null,null,[[["asref",8],["osstr",3]]],[[["asref",8],["osstr",3]]],[[["asref",8],["osstr",3]]],null,null,null,null,null,null,null,null,null,null,[[["str",15]]],[[["str",15]]],null,null,null,null,null,null,[[["bool",15],["reader",4]],["input",3]],[[["reader",4],["container",4],["bool",15],["option",4],["metadata",3],["codec",4]]],[[],["bool",15]],[[],["bool",15]],[[],["codectype",4]],[[["f32",15]],["usize",15]],[[["duration",3]],[["option",4],["duration",3]]],null,null,[[["clientbuilder",3]],["clientbuilder",3]],[[["arc",3],["songbird",3],["clientbuilder",3]],["clientbuilder",3]],[[["context",3]]],null,[[]],[[["arc",3],["songbird",3]]],null,null,null,null,[[["u64",15]],[["shard",4],["option",4]]],null,null,null,null,[[["value",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["input",3],["receiver",3],["trackcommand",4],["trackhandle",3]]],[[]],[[]],[[]],[[],["playmode",4]],[[["f32",15]]],[[],["f32",15]],[[],["duration",3]],[[],["duration",3]],[[["loopstate",4]],["trackresult",6]],[[]],[[],["trackstate",3]],[[["duration",3]],[["trackresult",6],["duration",3]]],[[],["uuid",3]],[[["input",3]]],[[["uuid",3],["input",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["asref",8],["osstr",3]]],[[["str",15]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["pin",3],["context",3]],["poll",4]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["usize",15]],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[],[["usize",15],["error",3],["result",4]]],[[["seekfrom",4]],[["error",3],["result",4],["u64",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["usize",15]],["usize",15]],[[],[["usize",15],["error",3],["result",4]]],[[["seekfrom",4]],[["error",3],["result",4],["u64",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["usize",15]],["usize",15]],[[],[["usize",15],["error",3],["result",4]]],[[["seekfrom",4]],[["error",3],["result",4],["u64",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["usize",15]],["usize",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[],["bitrate",4]],[[["i32",15]],[["result",4],["bitrate",4],["error",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[["bitrate",4]],["bool",15]],[[["bitrate",4]],["bool",15]],[[]],[[]],[[["cryptoerror",3]]],[[["ioerror",3]],["error",4]],[[["jsonerror",3]],["error",4]],[[["senderror",3],["wsmessage",4]],["error",4]],[[["senderror",3],["eventmessage",4]],["error",4]],[[["senderror",3],["mixermessage",4]],["error",4]],[[["intermessage",4],["trysenderror",3]]],[[["commanderror",4]]],[[["connectionerror",4]]],[[["trackevent",4]]],[[["coreevent",4]]],[[["trackevent",4]]],[[["coreevent",4]]],[[["u64",15]]],[[["serenitychannel",3]]],[[["twilightchannel",3]]],[[["u64",15]]],[[["serenityguild",3]]],[[["twilightguild",3]]],[[["u64",15]]],[[["serenityuser",3]]],[[["twilightuser",3]]],[[["compressed",3]]],[[["usize",15]]],[[["duration",3]]],[[["child",3]]],[[["child",3],["vec",3]]],[[["codec",4]]],[[["catchererror",4]]],[[["dcaerror",4]]],[[["ioerror",3]],["error",4]],[[["opuserror",4]],["error",4]],[[["vec",3],["u8",15]],["reader",4]],[[["restartable",3]]],[[],["config",3]],[[],["cryptomode",4]],[[],["decodemode",4]],[[],["driver",3]],[[],["eventcontext",4]],[[],["coreevent",4]],[[],["trackevent",4]],[[],["untimedevent",4]],[[],["event",4]],[[],["call",3]],[[],["channelid",3]],[[],["guildid",3]],[[],["userid",3]],[[],["connectioninfo",3]],[[],["compressed",3]],[[],["lengthhint",4]],[[],["memory",3]],[[],["opusdecoderstate",3]],[[],["codec",4]],[[],["codectype",4]],[[],["frame",3]],[[],["container",4]],[[],["metadata",3]],[[],["shard",4]],[[],["trackerror",4]],[[],["trackhandle",3]],[[],["loopstate",4]],[[],["playmode",4]],[[],["trackqueue",3]],[[],["trackstate",3]],[[]],[[]],[[],["eventstore",3]],[[],["channelid",3]],[[],["guildid",3]],[[],["userid",3]],[[],["metadata",3]],[[],["serenitysharder",3]],[[],["serenityshardhandle",3]],[[]],[[]],[[],["trackqueue",3]],[[],["trackstate",3]],[[],["ordering",4]],[[["cryptomode",4]],["bool",15]],[[["decodemode",4]],["bool",15]],[[["coreevent",4]],["bool",15]],[[],["bool",15]],[[["trackevent",4]],["bool",15]],[[["untimedevent",4]],["bool",15]],[[["untimedevent",4]],["bool",15]],[[["event",4]],["bool",15]],[[["event",4]],["bool",15]],[[["channelid",3]],["bool",15]],[[["channelid",3]],["bool",15]],[[["guildid",3]],["bool",15]],[[["guildid",3]],["bool",15]],[[["userid",3]],["bool",15]],[[["userid",3]],["bool",15]],[[["metadata",3]],["bool",15]],[[["metadata",3]],["bool",15]],[[["trackerror",4]],["bool",15]],[[["loopstate",4]],["bool",15]],[[["loopstate",4]],["bool",15]],[[["playmode",4]],["bool",15]],[[["trackstate",3]],["bool",15]],[[["trackstate",3]],["bool",15]],[[],[["option",4],["ordering",4]]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["stdresult",4],["formaterror",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["fmtresult",6]],[[["formatter",3]],["fmtresult",6]],[[["formatter",3]],["fmtresult",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["memory",3]],["result",6]],[[["codectype",4]],["result",6]],[[],[["usize",15],["ioresult",6]]],[[],[["usize",15],["ioresult",6]]],[[],[["usize",15],["ioresult",6]]],[[],[["usize",15],["ioresult",6]]],[[],[["usize",15],["ioresult",6]]],[[["seekfrom",4]],[["ioresult",6],["u64",15]]],[[["seekfrom",4]],[["ioresult",6],["u64",15]]],[[["seekfrom",4]],[["ioresult",6],["u64",15]]],[[["seekfrom",4]],[["ioresult",6],["u64",15]]],[[["pin",3],["context",3]],["poll",4]],[[["serenityuser",3],["u64",15]],[["pin",3],["box",3]]],[[["sender",3],["intermessage",4],["u64",15]],[["pin",3],["box",3]]],[[["u64",15]],[["pin",3],["box",3]]],[[["serenityguild",3],["option",4],["str",15]],[["pin",3],["box",3]]],[[["serenityguild",3],["voicestate",3]],[["pin",3],["box",3]]],[[],[["ioresult",6],["transformposition",4]]],[[],["usize",15]],[[]],[[["cryptomode",4]]],[[["decodemode",4]]],[[["usize",15]]],[[],["str",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["usize",15],["cipher",3]],[["result",4],["cryptoerror",3]]],[[],["bool",15]],[[],[["coreevent",4],["option",4]]],[[["eventhandler",8],["event",4]]],[[["duration",3]]],[[]],[[]],[[["eventdata",3],["duration",3]]],[[["userid",3],["shard",4],["guildid",3]]],[[["guildid",3],["shard",4],["config",3],["userid",3]]],[[["userid",3],["guildid",3]]],[[["userid",3],["config",3],["guildid",3]]],[[["bool",15]]],[[],["bool",15]],[[["channelid",3]]],[[["channelid",3]]],[[],[["option",4],["connectioninfo",3]]],[[]],[[["bool",15]]],[[],["bool",15]],[[["string",3]]],[[["string",3]]],[[["bitrate",4],["input",3]],["result",6]],[[["bitrate",4],["input",3],["config",3],["option",4]],["result",6]],[[["config",3],["input",3],["option",4],["opusencoder",3]],["result",6]],[[]],[[["input",3]],["result",6]],[[["option",4],["input",3],["config",3]],["result",6]],[[]],[[],[["result",4],["opuserror",4]]],[[["opusdecoder",3]]],[[["codectype",4]],[["ioresult",6],["frame",3]]],[[["codectype",4]],[["usize",15],["option",4]]],[[],["usize",15]],[[["value",4]]],[[["value",4]]],[[]],[[],["arc",3]],[[["cluster",3],["u64",15]],["arc",3]],[[["into",8],["userid",3],["u64",15]]],[[["into",8],["guildid",3]],[["arc",3],["option",4]]],[[["guildid",3]],[["arc",3],["mutex",3]]],[[]],[[]],[[["into",8],["guildid",3]]],[[["into",8],["guildid",3]]],[[["twilightevent",4]]],[[["config",3]]],[[["uuid",3],["box",3],["bool",15],["sender",3],["trackcommand",4],["metadata",3]]],[[],["trackresult",6]],[[],["trackresult",6]],[[],["trackresult",6]],[[["f32",15]],["trackresult",6]],[[],["trackresult",6]],[[],["bool",15]],[[["duration",3]],["trackresult",6]],[[["eventhandler",8],["event",4]],["trackresult",6]],[[],["trackresult",6]],[[]],[[],["trackresult",6]],[[],["trackresult",6]],[[["usize",15]],["trackresult",6]],[[],["uuid",3]],[[],["metadata",3]],[[],["rwlock",3]],[[["trackcommand",4]],["trackresult",6]],[[],["bool",15]],[[],["trackhandle",3]],[[]],[[["driver",3],["input",3]]],[[["track",3],["driver",3]]],[[],[["option",4],["trackhandle",3]]],[[["usize",15]],[["queued",3],["option",4]]],[[],["usize",15]],[[],["bool",15]],[[]],[[],["trackresult",6]],[[],["trackresult",6]],[[]],[[],["trackresult",6]],[[],[["vec",3],["trackhandle",3]]]],"p":[[3,"Config"],[4,"CryptoMode"],[4,"DecodeMode"],[3,"Driver"],[4,"JoinError"],[4,"ConnectionError"],[4,"TrackError"],[4,"EventContext"],[13,"SpeakingUpdate"],[13,"VoicePacket"],[13,"RtcpPacket"],[4,"CoreEvent"],[4,"TrackEvent"],[4,"UntimedEvent"],[8,"EventHandler"],[4,"Event"],[3,"ChannelId"],[3,"GuildId"],[3,"UserId"],[3,"Compressed"],[4,"LengthHint"],[3,"Memory"],[3,"OpusDecoderState"],[4,"Codec"],[4,"CodecType"],[4,"Error"],[13,"Json"],[4,"DcaError"],[4,"Reader"],[8,"ReadSeek"],[3,"Restartable"],[8,"Restart"],[4,"Container"],[13,"Dca"],[3,"Frame"],[3,"Metadata"],[3,"Input"],[8,"SerenityInit"],[4,"Sharder"],[4,"Shard"],[4,"TrackCommand"],[4,"LoopState"],[4,"PlayMode"],[3,"TrackState"],[3,"Track"],[4,"Bitrate"],[3,"ConnectionInfo"],[3,"Connect"],[3,"EventData"],[3,"EventStore"],[3,"Call"],[3,"OpusCompressor"],[3,"ChildContainer"],[3,"Songbird"],[3,"SongbirdKey"],[3,"SerenitySharder"],[3,"SerenityShardHandle"],[3,"TrackHandle"],[3,"TrackQueue"],[3,"Queued"]]}\
}');
initSearch(searchIndex);