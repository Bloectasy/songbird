(function() {var implementors = {};
implementors["songbird"] = [{"text":"impl Debug for Config","synthetic":false,"types":[]},{"text":"impl Debug for Error","synthetic":false,"types":[]},{"text":"impl Debug for CryptoMode","synthetic":false,"types":[]},{"text":"impl Debug for DecodeMode","synthetic":false,"types":[]},{"text":"impl Debug for Driver","synthetic":false,"types":[]},{"text":"impl Debug for JoinError","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Debug for EventContext&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Debug for CoreEvent","synthetic":false,"types":[]},{"text":"impl Debug for EventData","synthetic":false,"types":[]},{"text":"impl Debug for EventStore","synthetic":false,"types":[]},{"text":"impl Debug for TrackEvent","synthetic":false,"types":[]},{"text":"impl Debug for UntimedEvent","synthetic":false,"types":[]},{"text":"impl Debug for Event","synthetic":false,"types":[]},{"text":"impl Debug for Call","synthetic":false,"types":[]},{"text":"impl Debug for ChannelId","synthetic":false,"types":[]},{"text":"impl Debug for GuildId","synthetic":false,"types":[]},{"text":"impl Debug for UserId","synthetic":false,"types":[]},{"text":"impl Debug for ConnectionInfo","synthetic":false,"types":[]},{"text":"impl Debug for Compressed","synthetic":false,"types":[]},{"text":"impl Debug for OpusCompressor","synthetic":false,"types":[]},{"text":"impl Debug for LengthHint","synthetic":false,"types":[]},{"text":"impl Debug for Memory","synthetic":false,"types":[]},{"text":"impl Debug for ChildContainer","synthetic":false,"types":[]},{"text":"impl Debug for OpusDecoderState","synthetic":false,"types":[]},{"text":"impl Debug for Codec","synthetic":false,"types":[]},{"text":"impl Debug for CodecType","synthetic":false,"types":[]},{"text":"impl Debug for Frame","synthetic":false,"types":[]},{"text":"impl Debug for Container","synthetic":false,"types":[]},{"text":"impl Debug for Error","synthetic":false,"types":[]},{"text":"impl Debug for DcaError","synthetic":false,"types":[]},{"text":"impl Debug for Metadata","synthetic":false,"types":[]},{"text":"impl Debug for Reader","synthetic":false,"types":[]},{"text":"impl Debug for Restartable","synthetic":false,"types":[]},{"text":"impl Debug for Input","synthetic":false,"types":[]},{"text":"impl Debug for Songbird","synthetic":false,"types":[]},{"text":"impl Debug for Sharder","synthetic":false,"types":[]},{"text":"impl Debug for SerenitySharder","synthetic":false,"types":[]},{"text":"impl Debug for Shard","synthetic":false,"types":[]},{"text":"impl Debug for SerenityShardHandle","synthetic":false,"types":[]},{"text":"impl Debug for TrackCommand","synthetic":false,"types":[]},{"text":"impl Debug for TrackError","synthetic":false,"types":[]},{"text":"impl Debug for TrackHandle","synthetic":false,"types":[]},{"text":"impl Debug for LoopState","synthetic":false,"types":[]},{"text":"impl Debug for PlayMode","synthetic":false,"types":[]},{"text":"impl Debug for TrackQueue","synthetic":false,"types":[]},{"text":"impl Debug for Queued","synthetic":false,"types":[]},{"text":"impl Debug for TrackState","synthetic":false,"types":[]},{"text":"impl Debug for Track","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()